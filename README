cl-password  -  Password generation in Common Lisp

Copyright 2011 Thomas de Grivel <billitch@gmail.com>

Permission to use, copy, modify, and distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.


MAKE-PASSWORD
-------------

Returns a password with at least BITS random bits and
at least one character from each character CLASSES.

Examples :

;;  by default get 64 random bits and all character classes

(make-password)
~> "5cez/]iPQc"

(make-password)
~> "IFg8(OlaBl"

;;  still 64 random bits but with only lower case password is longer

(make-password :classes :lower)
~> "rdscqmusxxisfa"

(make-password :classes :alphanum)
~> "opQV02RJmgg"

;;  more bits

(make-password :bits 128)
~> "L]A8.-Jsc_v{UdQP-mjQ"
